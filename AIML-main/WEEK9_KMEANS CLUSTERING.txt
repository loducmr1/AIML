import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans
import sklearn.metrics as sm
import pandas as pd
import numpy as np

iris = datasets.load_iris()
X = pd.DataFrame(iris.data)
print(X.head())
X.columns = ['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']

y = pd.DataFrame(iris.target)
print(y.tail())
y.columns = ['target']
plt.figure(figsize=(14,7))

colormap = np.array(['red', 'lime', 'black'])

plt.subplot(1, 2, 1)
plt.scatter(X.Sepal_Length, X.Sepal_Width, c=colormap[y.target], s=40)
plt.title('Sepal')
plt.subplot(1, 2, 2)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y.target], s=40)
plt.title('Petal')

model = KMeans(n_clusters=3)
model.fit(X)
print(model.labels_)
plt.subplot(1,2,1)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y.target], s=40)
plt.title('Real Classification')
plt.subplot(1,2,2)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[model.labels_], s=40)
plt.title('K MEANS Classification')


print(sm.accuracy_score(y,model.labels_))
print(sm.confusion_matrix(y,model.labels_))



from sklearn import preprocessing
scalar = preprocessing.StandardScaler()
scalar.fit(X)
xsa = scalar.transform(X)

xs = pd.DataFrame(xsa, columns = X.columns)
xs.sample(5)

from sklearn.mixture import GaussianMixture
gmm=GaussianMixture(n_components=3)
gmm.fit(xs)
y_cluster_gmm=gmm.predict(xs)
print(y_cluster_gmm)

plt.subplot(1,2,1)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y.target], s=40)
plt.title('Real Classification')
plt.subplot(1,2,2)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y_cluster_gmm], s=40)
plt.title('GMM Classification')


print(sm.accuracy_score(y,y_cluster_gmm))
print(sm.confusion_matrix(y,y_cluster_gmm))